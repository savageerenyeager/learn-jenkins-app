pipeline {
    agent any

    environment {
        NETLIFY_SITE_ID = '379e8645-acdb-44db-b7b1-9571aa75920b'
        NETLIFY_AUTH_TOKEN= credentials('netlify-token')
    }

    stages {

        stage('Build') {
            agent {
                docker {
                    image 'node:18-alpine'
                    reuseNode true
                }
            }
            steps {
                sh '''
                    ls -la
                    node --version
                    npm --version
                    npm ci
                    npm run build
                    ls -la
                '''
            }
        }

        stage('Tests') {
            parallel {
                stage('Unit tests') {
                    agent {
                        docker {
                            image 'node:18-alpine'
                            reuseNode true
                        }
                    }

                    steps {
                        sh '''
                            #test -f build/index.html
                            npm test
                        '''
                    }
                    post {
                        always {
                            junit 'jest-results/junit.xml'
                        }
                    }
                }

                stage('Local E2E') {
                    agent {
                        docker {
                            image 'mcr.microsoft.com/playwright:v1.39.0-jammy'
                            reuseNode true
                        }
                    }

                    steps {
                        sh '''
                            npm install serve
                            node_modules/.bin/serve -s build &
                            sleep 10
                            npx playwright test  --reporter=html
                        '''
                    }

                    post {
                        always {
                            publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: false, reportDir: 'playwright-report', reportFiles: 'index.html', reportName: 'Playwright HTML Report - Local', reportTitles: '', useWrapperFileDirectly: true])
                        }
                    }
                }
            }
        }
   
        stage('Stage deploy and E2E test') {
            agent {
                docker {
                     image 'mcr.microsoft.com/playwright:v1.39.0-jammy'
                     reuseNode true
                }
            }
            environment{
                CI_ENVIRONMENT_URL= " "
            }
            steps {
                    sh '''
                        npm install netlify-cli node-jq
                        echo "Deploying to staging. Site ID: $NETLIFY_SITE_ID"
                        node_modules/.bin/netlify status
                        node_modules/.bin/netlify deploy --dir=build --json >  output.json
                        sleep 10
                        CI_ENVIRONMENT_URL= $(node_modules/.bin/node-jq -r '.deploy_url' output.json)
                        npx playwright test  --reporter=html
                    '''
            }

            post {
                    always {
                        publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: false, reportDir: 'playwright-report', reportFiles: 'index.html', reportName: 'Playwright HTML Report - staging ', reportTitles: '', useWrapperFileDirectly: true])
                    }
            }
        }

        stage('Approval') {
            steps {
                timeout(time: 15, unit: 'MINUTES') {
                   input message: 'Please check stage testing results befoere pressing ok to prod deployment ? ', ok: 'Proceed to prod'
                } 
             
            }
        } 
        stage('PROD deploy and E2E test') {
            agent {
                docker {
                     image 'mcr.microsoft.com/playwright:v1.39.0-jammy'
                     reuseNode true
                }
            }
            environment{
                CI_ENVIRONMENT_URL= 'https://sweet-sprite-0f27be.netlify.app'
            }
            steps {
                    sh '''
                         npm install netlify-cli
                         node_modules/.bin/netlify --version
                         echo "Deploying to production. Site ID: $NETLIFY_SITE_ID"
                         node_modules/.bin/netlify status
                         node_modules/.bin/netlify deploy --dir=build --prod
                         echo 'polling after 1 mins'
                         npx playwright test  --reporter=html
                    '''
            }

            post {
                    always {
                        publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: false, reportDir: 'playwright-report', reportFiles: 'index.html', reportName: 'Playwright HTML Report - Prod ', reportTitles: '', useWrapperFileDirectly: true])
                    }
            }
        }
    }
}